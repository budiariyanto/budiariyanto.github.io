<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Budi Ariyanto</title>
    <link>https://budiariyanto.github.io/</link>
    <description>Recent content on Budi Ariyanto</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Budi Ariyanto</copyright>
    <lastBuildDate>Thu, 14 Sep 2017 23:26:59 +0700</lastBuildDate>
    
	<atom:link href="https://budiariyanto.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Manjaro Troubleshooting</title>
      <link>https://budiariyanto.github.io/2017/09/14/manjaro-tweaks/</link>
      <pubDate>Thu, 14 Sep 2017 23:26:59 +0700</pubDate>
      
      <guid>https://budiariyanto.github.io/2017/09/14/manjaro-tweaks/</guid>
      <description>Manjaro adalah salah satu distro linux yang masih baru. Distro ini based on Arch Linux. Manjaro menarik sekali untuk dicoba. Setelah saya coba, ada beberapa masalah di hardware. Nah pada artikel ini, saya akan share permasalahan yang saya hadapi dan solusinya. Sebagai informasi, saya menggunakan laptop Acer E5-475G-541U. Siapa tau solusi yg saya share di sini berguna untuk Anda meskipun beda laptop, karena permasalahan yg sama bisa saja terjadi di berbagai macam laptop yang berbeda.</description>
    </item>
    
    <item>
      <title>Memaknai Hari Ulang Tahun</title>
      <link>https://budiariyanto.github.io/2017/05/01/birthday/</link>
      <pubDate>Mon, 01 May 2017 20:40:28 +0700</pubDate>
      
      <guid>https://budiariyanto.github.io/2017/05/01/birthday/</guid>
      <description>Hari ulang tahun umumnya ditandai dengan perayaan bersama orang terdekat kita. Perayaan ini sebagai simbol kebahagiaan yang kita bagikan kepada orang lain. Kerap kali orang memaknai hari ulang tahun hanya sampai di situ saja. Menurut saya, ulang tahun mempunyai dua buah perspektif dan dapat menjadi bahan refleksi diri. Perspektif yang pertama adalah umur kita bertambah satu dan perspektif yang kedua adalah umur kita berkurang satu.
Ketika kita memaknai ulang tahun sebagai umur kita bertambah satu, maka kita akan mengingat pencapaian yang sudah kita lakukan dan pengalaman hidup seperti apa yang sudah kita lalui, juga tentunya kita ingat mengucap syukur kepada Tuhan karena diberi kesempatan untuk memulai tahun yang baru di hidup kita.</description>
    </item>
    
    <item>
      <title>Fix Docker Networking Problem</title>
      <link>https://budiariyanto.github.io/2017/03/22/docker-networking/</link>
      <pubDate>Wed, 22 Mar 2017 10:56:18 +0700</pubDate>
      
      <guid>https://budiariyanto.github.io/2017/03/22/docker-networking/</guid>
      <description>We may met situations that docker cannot connect to the internet. And the error message look like this:
Step 1/3 : FROM docker/whalesay:latest ---&amp;gt; 6b362a9f73eb Step 2/3 : RUN apt-get -y update &amp;amp;&amp;amp; apt-get install -y fortunes ---&amp;gt; Running in 10c0ca4a809a Err http://archive.ubuntu.com trusty InRelease Err http://archive.ubuntu.com trusty-updates InRelease Err http://archive.ubuntu.com trusty-security InRelease Err http://archive.ubuntu.com trusty Release.gpg Could not resolve &#39;archive.ubuntu.com&#39; Err http://archive.ubuntu.com trusty-updates Release.gpg Could not resolve &#39;archive.ubuntu.com&#39; Err http://archive.</description>
    </item>
    
    <item>
      <title>Bulk Renaming in Linux</title>
      <link>https://budiariyanto.github.io/2017/03/12/linux_bulk_renaming/</link>
      <pubDate>Sun, 12 Mar 2017 17:59:06 +0700</pubDate>
      
      <guid>https://budiariyanto.github.io/2017/03/12/linux_bulk_renaming/</guid>
      <description> There is a handy tools in linux for renaming bulk/mass files a once called rename. It&amp;rsquo;s a perl script and included in most linux distros.
How to bulk rename files $ rename &#39;s/&amp;lt;files to rename regex pattern&amp;gt;/&amp;lt;expected regex pattern&amp;gt;/&#39; &amp;lt;destination files&amp;gt;  How to bulk rename files, add prefix $ rename &#39;s/^/&amp;lt;expected regex pattern&amp;gt;/&#39; &amp;lt;destination files&amp;gt;  </description>
    </item>
    
    <item>
      <title>Instalasi Golang</title>
      <link>https://budiariyanto.github.io/2016/10/01/instalasi-golang/</link>
      <pubDate>Sat, 01 Oct 2016 21:11:36 +0700</pubDate>
      
      <guid>https://budiariyanto.github.io/2016/10/01/instalasi-golang/</guid>
      <description>Bahasa pemrograman saat ini berkembang begitu cepat. Banyak bahasa pemrograman baru bermunculan dan beragam. Bahasa pemrograman baru yang sempat saya coba adalah go atau biasa disebut golang(go language) yang dikembangkan oleh Google. Golang dirilis pada tahun 2009, dan saat artikel ini ditulis sudah mencapai versi 1.7.1.
Download Golang Kita bisa mendownload golang di sini. Downloadlah yg cocok dengan OS kita.
Setup Environment Variable Setelah kita download, extractlah di sembarang folder.</description>
    </item>
    
    <item>
      <title>Membuat Project Java Dengan Gradle</title>
      <link>https://budiariyanto.github.io/2014/06/16/membuat-project-java-dengan-gradle/</link>
      <pubDate>Mon, 16 Jun 2014 03:29:56 +0700</pubDate>
      
      <guid>https://budiariyanto.github.io/2014/06/16/membuat-project-java-dengan-gradle/</guid>
      <description>&lt;p&gt;Build tools adalah sebuah tools atau alat untuk mengcompile suatu project berisi source code yang kita buat. Build tools banyak macamnya dan sudah ada sejak lama.&lt;/p&gt;

&lt;h2 id=&#34;kenapa-kita-butuh-build-tools&#34;&gt;Kenapa Kita Butuh Build Tools&lt;/h2&gt;

&lt;p&gt;Setelah kita selesai ngoding, tentunya kita compile aplikasi kita. Nah proses peng&lt;strong&gt;compile&lt;/strong&gt;an biasanya mencakup banyak hal, misalnya yang paling mendasar adalah mengubah source code menjadi binary. Proses ini kadang menjadi rumit ketika code yang kita buat menggunakan satu atau lebih library eksternal. Project kita menjadi dependen(bergantung) kepada library yang kita gunakan. Ternyata library yang kita gunakan pun dependen terhadap library lainnya lagi. Semuanya ini kalau kita selesaikan satu per satu secara manual bisa membuat pusing kepala.&lt;/p&gt;

&lt;p&gt;Masalah lainnya lagi adalah ketika packaging. Packaging project adalah aktivitas kita sebelum mendistribusikan project kita. Dalam kegiatan packaging ini, kita seleksi file-file mana saja yang harus diikutsertakan, bagaimana layoutnya, apa tipe packagenya dan sebagainya. Nah build tools ini mempunyai kemampuan untuk membantu kita dalam mengerjakan hal ini. Cukup sekali melakukan konfigurasi saja, selanjutnya biar build tools yang melakukannya. Jadi intinya adalah build tools ini membantu mengotomatisasi pekerjaan kita dalam hal distribusi dan build project. Pertanyaannya, apa build tools yang bagus untuk project Java? Menurut saya ada 2 yaitu &lt;a href=&#34;http://maven.apache.org&#34;&gt;Maven&lt;/a&gt; dan &lt;a href=&#34;http://www.gradle.org&#34;&gt;Gradle&lt;/a&gt;. Maven sebelumnya sudah pernah saya bahas secara singkat di &lt;a href=&#34;https://budiariyanto.github.io/2014/01/17/tutorial-singkat-maven/&#34;&gt;sini&lt;/a&gt; dan di &lt;a href=&#34;https://budiariyanto.github.io/2014/05/19/maven-multi-module-project/&#34;&gt;sini&lt;/a&gt;. Sekarang saya akan membahas Gradle.&lt;/p&gt;

&lt;h2 id=&#34;gradle&#34;&gt;Gradle&lt;/h2&gt;

&lt;p&gt;Gradle adalah build tools modern yang sedang booming akhir-akhir ini, terutama di kalangan penggemar bahasa pemrograman Java. Gradle ini mirip seperti build tools lain, contohnya make atau rake. Konfigurasi build automation pada gradle menggunakan bahasa pemrograman Groovy. Pada artikel ini saya tidak membahas tentang bahasa pemrograman Groovy, tapi saya ambil yang penting-pentingnya saja supaya kita dapat membuat project Java menggunakan Gradle diintegrasikan dengan Maven. Wah kenapa Maven masih ikut-ikut?&lt;/p&gt;

&lt;p&gt;Jadi begini, kegunaan Gradle sedikit berbeda dengan Maven. Gradle adalah build tools yang tidak spesifik terhadap satu bahasa pemrograman tertentu, sedangkan Maven spesifik untuk membantu membuat project yang kita buat menggunakan Java. Kalau kita perhatikan di ebook-ebook Gradle yang ada, pasti tutorial yang ada di dalam buku tersebut malah membahas bagaimana membuat project dan task Gradle secara umum menggunakan bahasa pemrograman Groovy, bukan langsung membahas bagaimana membuat project Java dengan menggunakan Gradle. Nah nanti kita akan membahas bagaimana membuat task dan mengatur project yang kita buat menggunakan Gradle, tapi masih menggunakan maven untuk memanage dependency project yang ada.&lt;/p&gt;

&lt;p&gt;Jadi, Gradle bisa digunakan untuk project apa saja karena kita bisa membuat task sendiri di dalamnya dimana task tersebut kita sendiri yang membuatnya mau jadi bagaimana. Itulah sekilas tentang Gradle.&lt;/p&gt;

&lt;h2 id=&#34;menginstall-gradle&#34;&gt;Menginstall Gradle&lt;/h2&gt;

&lt;p&gt;Berikut ini langkah-langkah setup gradle di komputer kita:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download gradle di websitenya lalu ekstrak di direktori mana saja.&lt;/li&gt;
&lt;li&gt;Buat environment variable bernama &lt;code&gt;GRADLE_HOME&lt;/code&gt; dan isi valuenya dengan path menuju direktori gradle yang diekstrak tadi.&lt;/li&gt;
&lt;li&gt;Logout dari sistem, login lagi. Selesai. :)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Menjadi Idealis</title>
      <link>https://budiariyanto.github.io/2014/05/19/menjadi-idealis/</link>
      <pubDate>Mon, 19 May 2014 17:56:45 +0700</pubDate>
      
      <guid>https://budiariyanto.github.io/2014/05/19/menjadi-idealis/</guid>
      <description>&lt;p&gt;&amp;ldquo;Udah laaahh.. nggak usah idealis gituu&amp;hellip;&amp;rdquo;. Kalimat ini sering saya dengar dari teman-teman saya. Biasanya, kalimat ini keluar kalau saya bercerita mengenai hal-hal yang ingin saya lakukan dan menurut saya benar, tapi kebanyakan orang tidak mau melakukannya. Contohnya, di tempat saya bekerja, terus terang masalah salary tidak menarik, tidak kompetitif. Sebagai programmer, saya sering kerja lembur karena deadline proyek yang singkat. Terkadang pekerjaan malah saya lanjutkan lagi di rumah. Tidak ada penghargaan untuk kerja lembur saya, berupa uang ataupun dalam bentuk lain. Jadi, lembur atau tidak take home pay saya sama saja. Meskipun begitu, saya tetap ingin proyek yang saya kerjakan selesai dengan baik dan tepat waktu. Karena hal ini, saya dibilang idealis oleh beberapa teman saya. Entah kenapa, orang idealis itu kesannya negatif.&lt;/p&gt;

&lt;h2 id=&#34;apa-sih-idealis-dan-idealisme-itu&#34;&gt;Apa sih idealis dan idealisme itu?&lt;/h2&gt;

&lt;p&gt;Menurut saya, idealisme adalah suatu paham atau pemikiran seseorang, yang menurutnya paling benar dan paling baik. Orang yang mempunyai idealisme dan ia pegang teguh, biasa disebut idealis. Biasanya, orang akan komplain atau bertanya-tanya. &amp;ldquo;Menurut dia itu baik dan benar, tapi menurut saya enggak tuh.. Gimana dong?&amp;rdquo; Oke, itulah kebenaran.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Maven Multi Module Project</title>
      <link>https://budiariyanto.github.io/2014/05/19/maven-multi-module-project/</link>
      <pubDate>Mon, 19 May 2014 17:19:49 +0700</pubDate>
      
      <guid>https://budiariyanto.github.io/2014/05/19/maven-multi-module-project/</guid>
      <description>Dalam membuat satu project besar, sebaiknya kita bagi menjadi beberapa project kecil. Project kecil ini tujuannya untuk membagi project supaya strukturnya projectnya lebih mudah dipahami dan juga lebih modular. Maven mempunyai fitur untuk membantu merealisasikan hal ini, yaitu project inheritance dan project aggregation. Mari kita bahas satu per satu.
Briefing Untuk membantu memahami dengan mudah, kita akan membuat sebuah project sederhana bernama &amp;ldquo;Manusia&amp;rdquo; dimana project ini punya modul yang bernama &amp;ldquo;Kepala&amp;rdquo;, &amp;ldquo;Badan&amp;rdquo;, &amp;ldquo;Tangan&amp;rdquo; dan &amp;ldquo;Kaki&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Memilih Distro Linux</title>
      <link>https://budiariyanto.github.io/2014/01/25/memilih-distro-linux/</link>
      <pubDate>Sat, 25 Jan 2014 17:50:04 +0700</pubDate>
      
      <guid>https://budiariyanto.github.io/2014/01/25/memilih-distro-linux/</guid>
      <description>&lt;p&gt;Saya sudah cukup lama berkelana gonta-ganti distro linux, sejak akhir tahun 2006. Distro yang pernah saya pakai adalah &lt;a href=&#34;http://www.ubuntu.com&#34;&gt;Ubuntu&lt;/a&gt;, &lt;a href=&#34;http://www.opensuse.org&#34;&gt;openSUSE&lt;/a&gt;, &lt;a href=&#34;http://fedoraproject.org&#34;&gt;Fedora&lt;/a&gt;, &lt;a href=&#34;http://www.linuxmint.com&#34;&gt;Mint&lt;/a&gt;, &lt;a href=&#34;http://www.slackware.com&#34;&gt;Slackware&lt;/a&gt; dan &lt;a href=&#34;http://www.archlinux.org&#34;&gt;Arch&lt;/a&gt;. Pernah juga hanya sekedar coba-coba Backtrack(sekarang namanya &lt;a href=&#34;http://www.kali.org&#34;&gt;Kali Linux&lt;/a&gt;), &lt;a href=&#34;http://www.slax.org&#34;&gt;Slax&lt;/a&gt; dan &lt;a href=&#34;http://puppylinux.org&#34;&gt;Puppy&lt;/a&gt;. Orang yang baru berkenalan dengan linux biasanya bernasib sama seperti saya waktu dulu. Bingung dengan banyaknya pilihan distro linux yang sudah seperti hutan belantara. Karena bingung, akhirnya bertanya ke sana kemari distro linux yang ini dengan yang itu bagus yang mana? Jawaban orang-orang yang ditanya pun bervariasi. Orang-orang biasanya menjawab dengan hal-hal yang bagus-bagus mengenai distro linux yang dia gunakan. Karena semuanya bagus, bertanya kepada orang-orang yang sudah menggunakan distro linux tidak menjawab kebingungan saya. Yang ada malah tambah bingung karena kok semuanya bagus. Akhirnya ya harus coba-coba sendiri. Lama kelamaan, saya tau bahwa distro linux itu memang ada faktor selera dan masing-masing distro linux mempunyai rancangan dan tujuan masing-masing. Jadi, tidak ada distro linux yang paling bagus. Semua tergantung selera dan kebutuhan. Maka dari itu, saya ingin membantu Anda yang baru berkenalan dengan linux, dengan membagikan pengalaman saya mengenai perjalanan saya belajar linux. Semoga membantu.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tutorial Singkat Maven</title>
      <link>https://budiariyanto.github.io/2014/01/17/tutorial-singkat-maven/</link>
      <pubDate>Fri, 17 Jan 2014 17:26:33 +0700</pubDate>
      
      <guid>https://budiariyanto.github.io/2014/01/17/tutorial-singkat-maven/</guid>
      <description>&lt;h2 id=&#34;apa-itu-maven&#34;&gt;Apa itu Maven?&lt;/h2&gt;

&lt;p&gt;Maven adalah suatu &lt;em&gt;tool&lt;/em&gt; untuk menstandarkan dan &lt;em&gt;memanage&lt;/em&gt; project, mempermudah proses &lt;em&gt;build&lt;/em&gt; dalam suatu project, mendefinisikan secara jelas apa saja isi project dan mempermudah dalam membagi-bagikan (&lt;em&gt;share&lt;/em&gt;) file .jar di semua project. Maven sering di-versuskan dengan ant, atau bahkan ada yang bilang sama saja. Menurut saya, maven mempunyai tujuan yang lebih luas daripada ant yang hanya fokus untuk &lt;em&gt;build tool&lt;/em&gt; dan membuat task-task tertentu saja. Fitur-fitur ant ada pada maven bahkan maven bisa diintegrasikan dengan ant via maven plugin.&lt;/p&gt;

&lt;h2 id=&#34;kenapa-harus-pakai-maven&#34;&gt;Kenapa harus pakai Maven?&lt;/h2&gt;

&lt;p&gt;Suatu project pasti mempunyai struktur direktori. Struktur direktori project ini biasa disebut &lt;em&gt;project template&lt;/em&gt;. Struktur direktori setiap orang atau setiap tim berbeda. Setiap tim menentukan standarnya sendiri, lalu jika ada orang baru masuk dalam tim tersebut, orang baru itu mengikuti standar project template yang sudah ada. Yang biasa dilakukan, orang baru tersebut membuat project baru di IDE, lalu melihat catatan project template yang sudah ada itu bagaimana. Struktur direktori project baru tersebut berusaha dibuat sama dengan struktur direktori standar project dengan membuat folder-folder, menambahkan file-file dan sebagainya. Dengan maven, pada umumnya kita cukup sekali membuat archetype untuk 1 jenis project. Setelah itu ketika membuat project baru, kita tinggal mengenerate project template dengan menggunakan archetype yang sudah dibuat tadi. Semua hal mengenai project template langsung bisa terkonfigurasi secara otomatis sesuai standar. Kalau ada keperluan khusus, baru kita tambahkan sendiri.&lt;/p&gt;

&lt;p&gt;Selain permasalahan project template, hampir di setiap project kita menggunakan library. Jika kita menggunakan library dalam suatu project, berarti project kita dependen terhadap library tersebut. Maka library tersebut adalah dependency dari project kita. Nah, peran maven di sini adalah memanage dependency sehingga programmer dapat dengan mudah menambahkan library yang ingin digunakan. &amp;ldquo;Ah, cuma nambah dependency gitu aja kok harus pakai maven? Repot banget sih..&amp;rdquo;. Perlu diketahui, library tidak selamanya &lt;em&gt;&amp;ldquo;stand-alone&amp;rdquo;&lt;/em&gt;. Jangan berasumsi bahwa jika kita ingin menambahkan library A dan B, yang kita tambahkan ke project ya hanya A dan B. Sering kali misalnya library A dependen terhadap library B, C, D, E, F dan G. Library H dependen terhadap library I, J dan K. Jadi, library yang ingin kita tambahkan sebetulnya hanya 2 (A dan H), tapi karena harus menambahkan juga dependensinya(B, C, D, E, F, G, I, J, K) pada akhirnya ada 11 library yang harus ditambahkan. Belum lagi kalau ternyata semua dependensi itu harus didownload satu per satu, di tempat yang berbeda-beda pula. Belum lagi kalau source code kita karena sesuatu hal harus dipindahkan ke mesin lain. Dengan asumsi bahwa environmentnya berbeda, kita harus setting ulang semua path dari library tersebut supaya dapat ditemukan oleh IDE. Hal ini membuat pusing kepala. Yang tadinya saya mau mulai membuat kode program dengan nyaman, harus repot mengurus hal-hal yang demikian. Maven membantu menyelesaikan permasalahan ini.&lt;/p&gt;

&lt;p&gt;Maven juga membantu dalam hal portability project. Saya pribadi menginginkan project dapat dibuka di IDE manapun dengan baik. Nah, kalau kita buat project baru di Netbeans nanti kalau ganti IDE menggunakan Eclipse project jadi tidak bisa dibuka. Kalau awalnya menggunakan Eclipse, dibuka menggunakan Netbeans harus menggunakan project importer milik Netbeans, yang saya sendiri masih ragu apakah bisa menyelesaikan semua kasus import project dengan baik. Untuk mengatasi hal ini, semua project saya buat menggunakan maven. Hati saya menjadi tenang. IDE java kelas kakap seperti Netbeans, Eclipse dan IntelliJ IDEA dapat membuka maven project dengan baik. Atau kalau project mau dibuka menggunakan editor seperti nano atau vim pun juga tidak masalah. &lt;em&gt;Last but not least&lt;/em&gt;, hal-hal inilah yang membuat maven berperan penting dalam setiap project.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Good Leader</title>
      <link>https://budiariyanto.github.io/2013/12/26/good-leader/</link>
      <pubDate>Thu, 26 Dec 2013 17:19:49 +0700</pubDate>
      
      <guid>https://budiariyanto.github.io/2013/12/26/good-leader/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/_3ASoBrFGlc&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34; title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;p&gt;Dalam suatu organisasi, pasti ada yang berperan menjadi pemimpin. Menjalani peran sebagai seorang pemimpin sekilas tampak mudah, maka banyak orang yang berlomba-lomba untuk menjadi seorang pemimpin. Punya anak buah, bisa menyuruh, memarahi, datang ke kantor sesuka hati, berkuasa seakan menjadi kenikmatan tersendiri. Pemimpin yang seperti ini saya sebut pemimpin palsu, karena jika perilakunya seperti itu, anak kecil pun juga bisa jadi pemimpin. Menjadi seorang pemimpin sebenarnya tidak semudah itu. Butuh proses yang panjang. Ibarat pahatan patung, dari sebongkah batu yang bentuknya jelek dipoles pelan-pelan, dibentuk, diukir menjadi suatu mahakarya yang indah.
Maka dari itu, saya sebetulnya heran, sekarang banyak pelatihan untuk menjadi pemimpin dalam waktu kurang dari 2 bulan. Pelatihan kepemimpinan seperti ini tepat apabila sasarannya adalah hanya sebatas membuka wawasan tentang kepemimpinan. Jika pelatihan tersebut tujuannya untuk menghasilkan seorang pemimpin yang berkualitas, maka hal tersebut merupakan suatu kesalahan besar, karena tidak ada pemimpin berkualitas yang dibentuk dalam waktu sesingkat itu. Pemimpin yang berkualitas menurut saya, mempunyai kriteria sebagai berikut:&lt;/p&gt;

&lt;h2 id=&#34;berangkat-dari-anak-buah&#34;&gt;Berangkat dari anak buah&lt;/h2&gt;

&lt;p&gt;Seorang pemimpin yang berkualitas harus berangkat dari bawah. Pemimpin dadakan biasanya memiliki attitude yang sama sekali tidak mencerminkan seorang pemimpin. Gila harta, gila kekuasaan. Kerja seenaknya dan sebetulnya tidak tau apa-apa. Juga tidak punya konsep, apalagi punya kemampuan untuk merealisasikannya. Attitudenya rata-rata seperti ini karena dia tidak pernah bisa melihat ke bawah. Ya karena memang tidak pernah merasakan bekerja keras dan bagaimana menjadi anak buah. Kalau ketemu pemimpin seperti ini, tiap hari makan ati. Di tempat saya bekerja, sampai-sampai sempat ada yang berkomentar: &amp;ldquo;Saya kan cuma pelaksana, jadi pemimpin mah enak&amp;rdquo;. O ya? Jika Anda juga berpikir hal yang sama, lanjutkan saja membaca artikel ini. Mungkin Anda akan berubah pikiran. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://budiariyanto.github.io/quote/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://budiariyanto.github.io/quote/readme/</guid>
      <description>Quote load content from file</description>
    </item>
    
  </channel>
</rss>